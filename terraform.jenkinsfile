pipeline {
    agent any
    parameters {
        choice(name: 'Environment', choices: 'shared\ndev\nqa\nstaging\ndemo')
        booleanParam(name: 'Sandbox', defaultValue: true, description: 'Run in sandbox cloud account')
    }
    options {
        timeout(time:10)
    }
    stages {
        stage('Cleanup'){
            steps {
                deleteDir()
            }
        }
        stage('Retrieve Code'){
            steps {
                script {
                    if(Sandbox=="true"){
                        repo='git@github.com:rlomax21/Infra-Dev.git'
                    }
                    else{
                        repo='git@github.com:TodayTix/config.git'
                    }
                }
                git (
                    branch: 'master',
                    credentialsId: 'Richard',
                    url: '${repo}'
                )
            }
        }
        stage('Run plan'){
            steps {
                script {
                    if(Sandbox=="true"){
                        cld='dev'
                   }
                    else{
                        cld='prod'
                    }
                }
                load "$JENKINS_HOME/.envars/${cld}"
                dir('terraform/${Environment}'){
                    sh 'terraform init'
                    sh 'echo $(date "+%D_%T") >> timestamp.txt'
                    sh 'terraform plan -out="$(cat timestamp.txt).outfile"'
                }
            }
        }
        stage('Approve Run'){
            input {
                message "Ready to run Plan?"
                ok "true"
                parameters {
                    booleanParam(name: 'apply')
                }
            }
            steps {
                script {
                    if(Sandbox=="true"){
                        cld='dev'
                    }
                    else{
                        cld='prod'
                    }
                }
                load "$JENKINS_HOME/.envars/${cld}"
                dir('terraform/${Environment}'){
                    sh 'terraform apply -auto-approve $(cat timestamp.txt).outfile'
                }
            }
        }
    }
}
